with accounts as (
SELECT
s.date as date,
sp.country as country,
ac.send_interval as send_interval,
ac.is_verified as is_verified,
ac.is_unsubscribed as is_unsubscribed,
count(ac.id) as account_cnt
FROM `data-analytics-mate.DA.account` ac
join `data-analytics-mate.DA.account_session` acs
on ac.id = acs.account_id
join `data-analytics-mate.DA.session_params` sp
on acs.ga_session_id = sp.ga_session_id
join `data-analytics-mate.DA.session` s
on sp.ga_session_id = s.ga_session_id
group by s.date,
sp.country,
ac.send_interval,
ac.is_verified,
ac.is_unsubscribed
),


--вивід емейл метрик так кількості відправлених/відкритих/відвіданих листів
message_metrics as (
SELECT
DATE_ADD(s.date, INTERVAL es.sent_date DAY) AS date,
sp.country AS country,
ac.send_interval,
ac.is_verified,
ac.is_unsubscribed,
COUNT(DISTINCT es.id_message) AS sent_msg,
COUNT(DISTINCT eo.id_message) AS open_msg,
COUNT(DISTINCT ev.id_message) AS visit_msg
FROM `data-analytics-mate.DA.email_sent` es
JOIN `data-analytics-mate.DA.account_session` acs
ON es.id_account = acs.account_id
JOIN `data-analytics-mate.DA.session` s
ON s.ga_session_id = acs.ga_session_id
LEFT JOIN `data-analytics-mate.DA.email_open` eo
ON eo.id_message = es.id_message
LEFT JOIN `data-analytics-mate.DA.email_visit` ev
ON ev.id_message = es.id_message
JOIN `data-analytics-mate.DA.session_params` sp
ON sp.ga_session_id = s.ga_session_id
JOIN `data-analytics-mate.DA.account` ac
ON acs.account_id = ac.id
GROUP BY
date,
sp.country,
ac.send_interval,
ac.is_verified,
ac.is_unsubscribed
),


--поєднання даних двох попередніх такблиць
union_data as (
select
date,
country,
send_interval,
is_verified,
is_unsubscribed,
account_cnt,
0 as sent_msg,
0 as open_msg,
0 as visit_msg,
from accounts
union all
select
date,
country,
send_interval,
is_verified,
is_unsubscribed,
0 as account_cnt,
sent_msg,
open_msg,
visit_msg,
from message_metrics
),




agg_data as (
SELECT
date,
country,
send_interval,
is_verified,
is_unsubscribed,
SUM(account_cnt) AS account_cnt,
SUM(sent_msg) AS sent_msg,
SUM(open_msg) AS open_msg,
SUM(visit_msg) AS visit_msg,
FROM union_data
GROUP BY date, country, send_interval, is_verified, is_unsubscribed
),




--ранжирування виведених даних по країнам
ranked_data AS (
Select *,
dense_rank() over (order by total_country_account_cnt desc) as rank_total_country_account_cnt,
dense_rank() over (order by total_country_sent_cnt desc) as rank_total_country_sent_cnt
from (

Select *,
sum(account_cnt) over (partition by country) as total_country_account_cnt,
sum(sent_msg) over (partition by country) as total_country_sent_cnt,
from agg_data) as final_groups)


--фінальний селект з даними
SELECT *
FROM ranked_data
WHERE rank_total_country_account_cnt <= 10 OR rank_total_country_sent_cnt <= 10
ORDER BY country desc


